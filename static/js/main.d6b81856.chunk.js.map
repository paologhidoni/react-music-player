{"version":3,"sources":["components/Player.js","components/Song.js","myTracks.js","App.jsx","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioElementRef","useRef","className","type","size","icon","faStepBackward","onClick","current","pause","play","faPlay","faStepForward","ref","src","audio","Song","cover","alt","name","artist","myTracks","color","id","uuidv4","active","App","useState","tracks","songs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSA6CeA,EApCA,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAEjCC,EAAkBC,iBAAO,MAc/B,OACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,2CACA,uBAAOC,KAAK,UACZ,4CAGF,sBAAKD,UAAU,eAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,YAAYE,KAAK,KAAKC,KAAMC,MACvD,cAAC,IAAD,CAAiBC,QAtBC,WAGnBT,GACDE,EAAgBQ,QAAQC,QACxBV,GAAcD,KAEdE,EAAgBQ,QAAQE,OACxBX,GAAcD,KAc+BI,UAAU,OAAOE,KAAK,KAAKC,KAAMM,MAC5E,cAAC,IAAD,CAAiBT,UAAU,eAAeE,KAAK,KAAKC,KAAMO,SAG5D,uBAAOC,IAAKb,EAAiBc,IAAKjB,EAAYkB,YCvBrCC,G,YAZF,SAAC,GAAmB,IAAlBnB,EAAiB,EAAjBA,YACb,OACE,sBAAKK,UAAU,0BAAf,UACE,qBAAKY,IAAKjB,EAAYoB,MAAOC,IAAI,eACjC,6BAAKrB,EAAYsB,OACjB,6BAAKtB,EAAYuB,c,QC6BRC,MAnCf,WAEE,MAAO,CACL,CACEF,KAAM,WACNF,MAAO,4BACPG,OAAQ,YACRL,MAAO,8BACPO,MAAO,CAAC,UAAW,WACnBC,GAAIC,cACJC,QAAQ,GAEV,CACEN,KAAM,OACNF,MAAO,wBACPG,OAAQ,aACRL,MAAO,0BACPO,MAAO,CAAC,UAAW,WACnBC,GAAIC,cACJC,QAAQ,KCeCC,MAvBf,WAKE,MAA0BC,mBAASC,KAAnC,mBAAOC,EAAP,KAGA,GAHA,KAGsCF,mBAASE,EAAM,KAArD,mBAAOhC,EAAP,KAGA,GAHA,KAGkC8B,oBAAS,IAA3C,mBAAO7B,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,CAAML,YAAaA,IACnB,cAAC,EAAD,CAAQE,aAAcA,EAAcD,UAAWA,EAAWD,YAAaA,QClB9DiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d6b81856.chunk.js","sourcesContent":["import React, {useRef} from 'react';\nimport '../styles/Player.css'\n\n// importing Font Awesome and specific icons.\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { faStepBackward } from '@fortawesome/free-solid-svg-icons';\nimport { faStepForward } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({currentSong, isPlaying, setIsPlaying}) => { // props\n  // Ref\n  const audioElementRef = useRef(null);\n  // Event Handlers\n  const playSongHandler = () => {\n     // console.log(audioElementRef.current); // we get an object that references the audio HTML tag, we can access the .current property to get the URL of the song\n\n    if(isPlaying) { // if the song is currently playing\n      audioElementRef.current.pause(); // pause the song and\n      setIsPlaying(!isPlaying); // set isPlaying state to the opposite value ( in this case false)\n    } else { // if it's not currently playing\n      audioElementRef.current.play(); // play it and\n      setIsPlaying(!isPlaying); // set isPlaying state to the opposite value ( in this case true)\n    }\n  }\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>Start Time</p>\n        <input type=\"range\" /> \n        <p>End Time</p>\n      </div>\n\n      <div className=\"play-control\">\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faStepBackward} />\n        <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={faPlay} />\n        <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faStepForward} />\n\n      </div>\n      <audio ref={audioElementRef} src={currentSong.audio}></audio>\n    </div>\n  )\n}\n\n\nexport default Player;","import React from 'react';\nimport \"../styles/modifiers.css\";\nimport \"../styles/Song.css\";\n\nconst Song = ({currentSong}) => {\n  return (\n    <div className=\"song-container stack-md\">\n      <img src={currentSong.cover} alt=\"song cover\"></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n\n    </div>\n  )\n}\n\n\nexport default Song;","import { v4 as uuidv4 } from \"uuid\"; \n\n\nfunction myTracks() {\n\n  return [\n    {\n      name: \"Ceremony\",\n      cover: \"./assets/img/ceremony.jpg\",\n      artist: \"New Order\",\n      audio: \"./assets/audio/ceremony.mp3\",\n      color: [\"#88A4B9\", \"#30697D\"],\n      id: uuidv4(),\n      active: true\n    },\n    {\n      name: \"Ever\",\n      cover: \"./assets/img/ever.jpg\",\n      artist: \"Team Sleep\",\n      audio: \"./assets/audio/ever.mp3\",\n      color: [\"#072942\", \"#EF3EC2\"],\n      id: uuidv4(),\n      active: false\n    },\n    // {\n    //   name: ,\n    //   cover: ,\n    //   artist: ,\n    //   audio: ,\n    //   color: ,\n    //   id: ,\n    //   active: false\n    // },\n  \n  ]\n\n}\n\nexport default myTracks;","import React, {useState} from 'react'\n// import React from 'react'\n\nimport './styles/App.css';\n\n// Add components\nimport Player from './components/Player';\nimport Song from './components/Song';\n\n// Import myTracks.js\nimport tracks from \"./myTracks\";\n\n\n\nfunction App() {\n\n  // State\n\n  // get all of our songs\n  const [songs, setSongs] = useState(tracks());\n\n  // set the first song to start with (current song)\n  const [currentSong, setCurrentSong] = useState(songs[0]); \n\n  // set the state of the song, whether it is currently playing or not, initially set as false\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong /* this is the state we are passing */} /> \n      <Player setIsPlaying={setIsPlaying} isPlaying={isPlaying} currentSong={currentSong}/>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}